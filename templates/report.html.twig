{% extends "base.html.twig" %}

{% block title %}Report{% endblock %}



{% block body %}
    <div class="two-col-layout">
        <main class="main">
            <article class="article">
                <h1>Redovisning</h1>
                <h2 id="kmom01">kmom01</h2>

                    <p>
                        Jag har jobbat med objektorientering i tidigare python kurser men även i
                        C# för länge sedan på gymnasiet. Så har en del förkunskaper kring just detta.

                        PHPs modell för klasser och objekt bygger på så kallad "objektorienterad programmering".
                        Det funkar på så sätt att man skapar klasser som man definerar med egenskaper (så kallade
                        variabler) och metoder (så kallade funktioner).
                        Ett exempel: En klass är en ritning för en bil och ett objekt är den
                        faktiska bil som är byggd enligt ritningen.

                        Jag uppfattar min kod som väldigt tydlig och att den gör den den ska och
                        att jag använt tydliga variabelnamn mm, för att man lätt ska veta vad som är vad.
                        Filernas struktur är även uppbyggda på samma sätt som vi gjorde i övningen för filernas upplägg
                        vilket fungerade väldigt bra. Ända skillnaden är att jag la till några CSS-filer för att
                        särskilda och tydligöra min CSS kod lite grann. I början tyckte jag att det var lite svårt
                        att förstå allt och hur allt hängde ihop men när jag sedan började programmera själv och verkligen
                        kom in i det gick det bra och nu förstår jag allt jättebra tycker jag.


                        Ang. <i>“PHP The Right Way”</i> så är delarna som <i>PHPDOC</i> och informationen under området <i>"Resources"</i>
                        de delar som kommer vara de mest värdefulla. I och med att att man aldrig kommer kunna allting med hur syntaxer
                        och alla inbyggda variabler fungerar och ser ut. Det är därför bra att ha dessa till sin hjälp. Jag tycker också området för 
                        <i>Security</i> verkar intressant, då det alltid är intressant att se tips och hur man ska tänka för att koden och det man
                        gör är säkert också. Så jag skulle väl säga att det även är säkerhetsdelen som man skulle vilja lära sig mer om.

                        Mitt TIL till nästa kmom är att jobba på exakt samma sätt som jag gjort då jag fortsatt vara nyfiken
                        och velat lära mig mer och förstå hur allting funkar och hänger ihop. Tar även med mig hur bra
                        jag lärt mig git och github nu!
                    </p>

Vilken är din TIL för detta kmom?
                <h2 id="kmom02">kmom02</h2>

                    <p>

                        Arv: En klass ärver egenskaper (variabler) och metoder från en annan klass.Detta för att kunna återanvända kod och skapa en "är en" -relation.
                        Komposition: En klass innehåller objekt av andra klasser. Detta för att bygga upp objekt av mindre delar.
                        Interface: Ett kontrakt som säger vilka metoder en klass <strong>måste</strong> ha. Detta för att vara säker på att klasser följer samma struktur.
                        Trait: En samling metoder som kan återanvändas i flera klasser. Detta för att undvika att kod kommer flera gånger utan att använda arv.
                        <br>
                        <br>
                        En bra liknelse:<br>
                        En <strong>Riddare är en Karaktär</strong> – det är <strong>arv</strong>.<br>
                        Riddaren <strong>har ett Vapen</strong> – det är <strong>komposition</strong>.<br>
                        En <strong>Drake kan flyga</strong> – det är ett <strong>interface</strong>.<br>
                        Både <strong>Riddare och en Drake loggar händelser</strong> – det är en <strong>trait</strong>.<br>
                        <br>
                        Min implementation av uppgiften försökte jag göra lite likt exempelupg. och hur Mikael gjorde med Pig kortspelet och sedan utgå från det. 
                        Så jag valde annars att göra det likt som jag gjort tidigare dvs allt för routsen i "CardGameController.php" och sedan deras motsvarigheter
                        i deras tillhörande twig filer och sedan egen klasser för bland annat en egen DeckofCards klass som hanterar alla olika saker med kortleken och som
                        även skapar kortleken. (Står mer om detta under infon vid "Cards navigationen). I det stora hela är jag väldigt nöjd med min uppgift tycker jag och 
                        hur allt fungerar. Men var lite stressigt då jag trodde att jag gjort denna men såg sedan att jag missade den vilket ej var det bästa. Sedan var även
                        så att fastnade på några smådelar som att kortleken ej ville byta färg för visa av kortlekarnas "symboler" vilket tyvärr också tog tid. Då jag blev
                        efter i och med att jag fick lägga tid på denna när missat saker när det fortsatte andra områden så störde detta lite och gjorde att sådana tillfällen
                        när man fastnade blev lite jobbigare då man kände att man hade mycket att göra. Men som sagt i det stora hela är jag väldigt nöjd med mitt utförande
                        och hur jag strukturerat och lagt upp koden och mina klasser. Kan ej helt komma på vad jag skulle vilja förbättra i alla fall just nu, mer än att inte
                        missa det så jag kände mig efter och blev stressad mer pga detta.

                        Jag tycker ändå det såhär långt är bra att jobba med Symfony och applikationskoden i MVC. Men som sagtt då jag såg att missat detta området mm så blev
                        stressigt vilket gjorde att jag behövde förstå och kunna allt under kortare tidspann så det gjorde det hela lie svårare men då det är väldigt likt
                        tänkt på upplägget för routens mm även om innehållet är olika, detta inkluderar även API delen så upplevde jag att detta gick bra ändå.


                        Min TIL till nästa kmom är att fortsätta som jag gör och fastnar jag att forsätta med nästa område eller liknande tills jag kan få hjälp så jag ej
                        fastnar riktigt och bara känner mig ännu mer stressad av att jag har saker kvar att göra. 
                    
                    </p>

                <h2 id="kmom03">kmom03</h2>

                    <p>Här kommer redovisningstexten för detta kursmoment.</p>

                <h2 id="kmom04">kmom04</h2>

                    <p>Här kommer redovisningstexten för detta kursmoment.</p>

                <h2 id="kmom05">kmom05</h2>

                    <p>Här kommer redovisningstexten för detta kursmoment.</p>

                <h2 id="kmom06">kmom06</h2>

                    <p>Här kommer redovisningstexten för detta kursmoment.</p>

                <h2 id="kmom10">kmom10</h2>

                    <p>Här kommer redovisningstexten för detta kursmoment.</p>
            </article>
        </main>
            <aside class="aside">
                <h4>Länkar</h4>
                <ul>
                    <li><a href="#kmom01">kmom01</a></li>
                    <li><a href="#kmom02">kmom02</a></li>
                    <li><a href="#kmom03">kmom03</a></li>
                    <li><a href="#kmom04">kmom04</a></li>
                    <li><a href="#kmom05">kmom05</a></li>
                    <li><a href="#kmom06">kmom06</a></li>
                    <li><a href="#kmom10">kmom10</a></li>
                </ul>
            </aside>
    </div>

{% endblock %}